# lines that start with # are comments

# commands the engine to load an existing file at that point
extends basic-comments
# Searches for "basic-comments.nd-lang" in the same folder

# Defines which languages are affected by this file
matches py python p

# Here a scope is defined by a name, later added as class to html and a type

class-name
  regex-nr-1
  regex-nr-2

# introducing four modifiers
# open : Pushs class-name to stack, when any of these match
# close : Pops class-name from stack if any match
# default : Any text that gets passed plain will use class-name
# when : rule only active if class-name is in stack, works in OR-manner. if within parenthesis, it counts as AND

class-name open-default
  regex-nr-1

class-name close
  regex-nr-2

in-class-name when class-name
  regex-nr-3

# Default class names (they are already styled in the default.css)

# keyword-def    (def, func, typedef, ...)
# keyword-flow   (if, while, for, ...)
# keyword-other  (in, as, sizeof, ...)
# literal-num    (1.25, 12, -5, ...)
# literal-str    ("text", 'c', ...)
# literal-const  (true, False, null, ...)
# type           (int, str, float, ...)
# comment        (# comment, // other, /* more */)

# NEW DEFAULTS

# comment           Same as comment-line
# comment-line
# comment-block

# doc-emphazise     lighter green
# doc-highlight     blue
# doc-warning       yellowish
# doc-todo          idk, purple?
# doc-error         red

# constant          Same as constant-other
# constant-numeric
# constant-character
# constant-character-escape
# constant-string
# constant-string-evaluate
# constant-language
# constant-other

# entity
# entity-function
# entity-type
# entity-tag

# invalid
# invalid-illegal
# invalid-deprecated

# keyword           Same as keyword-other
# keyword-control
# keyword-operator
# keyword-other

# storage           Same as storage-type
# storage-type
# storage-modifier

# variable
# variable-parameter
# variable-language
# variable-other

# END NEW DEFAULTS

# Example
keyword
  ^\s*\bdef\b
  \breturn\b
  \bif\b
  \bwhile\b
  \bdo\b
  \bfor\b

literal
  \d(?:\.\d+)?
  "\w*"
  \btrue\b
  \bfalse\b
  \bnull\b

comment
  #.*
  